'use strict';
class StdlibList {
    data;
    checkIndex(index, length) {
        if(typeof length == 'undefined')
            length = this.length() - 1;
        if(index < 0 || index > length)
            throw new Error("Invalid list index: " + index);
    }
    length() {
        return this.data.length;
    }
    get(index) {
        this.checkIndex(index);
        return this.data[index];
    }
    set(index, value) {
        this.checkIndex(index);
        this.data[index] = value
    }
    add(value) {
        this.data.push(value);
    }
    insert(index, value) {
        this.checkIndex(index, this.length());
        this.data.splice(index, 0, value);
    }
    remove(index) {
        this.checkIndex(index);
        this.data.splice(index, 1);
    }
    clear() {
        this.data.splice(0, this.length());
    }
    toArray() {
        return this.data.map(x => x);
    }
    static create(initial) {
        let newList = new list();
        if (typeof initial === 'undefined' || initial === null)
           newList.data =  [];
        else
           newList.data =  initial.map(x => x);

        return newList;
    }
    constructor() {
        this.data = [];
    }
}

let list = StdlibList;
module.exports = list;