//@@DocBrief("The scheduler class")
class StdlibScheduler {
    #periodInMilliseconds;
    #callback;
    #handler = null;
    #needStop;

    constructor(periodInMilliseconds, callback) {
        this.#periodInMilliseconds = periodInMilliseconds;
        this.#callback = callback;
        this.#handler = null;
        this.#needStop = false;
    }

    startImmediately() {
        this.#needStop = false;
        this.#callback.invoke();
        if (!this.#needStop)
            this.startWithDelay();
    }
    #run() {
        if (this.#needStop) {
            return;
        }
        this.#callback.invoke();
    }
    startWithDelay() {
        this.#needStop = false;
        if (this.#periodInMilliseconds >= 0) {
            if(this.#handler){
                clearInterval(this.#handler);
            }
            this.#handler = setInterval(this.#run.bind(this), this.#periodInMilliseconds);
       } else {
            while (!this.#needStop)
                this.#callback.invoke();
        }
    }
    stop() {
        this.#needStop = true;
        if (this.#handler !== null) {
            clearInterval(this.#handler);
            this.#handler = null;
        }
    }
    static create(periodInMilliseconds, callback) {
        return new scheduler(periodInMilliseconds, callback);
    }
}

let scheduler = StdlibScheduler;
module.exports = scheduler;
