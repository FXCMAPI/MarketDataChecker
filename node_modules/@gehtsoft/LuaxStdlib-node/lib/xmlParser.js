'use strict';
let xmlNode = require('./xmlNode');
let exception = null;
let DOMParserLocal = null;

if (typeof window != 'undefined' && window != null)
    DOMParserLocal = window.DOMParser;
else if (typeof require !== 'undefined' && require !== null) {
    DOMParserLocal = require('@xmldom/xmldom').DOMParser;
    try {
       exception = require('./exception');
    } catch {}
}

class StdlibXmlParser {
    parse(xmlText) {
        if (xmlText === null || typeof xmlText === 'undefined' || xmlText.length === 0)
           return null;
        let node = new xmlNode();
        node.value = "";
        let parser = new DOMParserLocal();
        node.documentElement = parser.parseFromString(xmlText,"text/xml").documentElement;
        if (node.documentElement.nodeType == xmlNode.ELEMENT_NODE) {
            node.type = xmlNode.ELEMENT;
            node.name = node.documentElement.nodeName;
            node.localName = node.documentElement.localName;
            node.namespaceURI = node.documentElement.namespaceURI;
        } else if (exception != null && typeof exception !== 'undefined')
                throw exception.create(0, "Unknown XML node '" + node.documentElement.nodeType + "'");
            else
                throw new Error("Unknown XML node '" + node.documentElement.nodeType + "'");

        return node;
    }
}

let xmlParser = StdlibXmlParser;
module.exports = xmlParser;
