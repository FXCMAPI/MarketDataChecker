'use strict';
let stdlib = require('@gehtsoft/LuaxStdlib-node').stdlib;
class DxFeedNamesProvider {
    instrumentsProvider;
    constructor() {
        this.instrumentsProvider = null;
    }
    static create(instrumentsProvider) {
        let instance;
        instance = new DxFeedNamesProvider();
        instance.instrumentsProvider = instrumentsProvider;
        return instance;
    }
    setInstrumentsProvider(instrumentsProvider) {
        this.instrumentsProvider = instrumentsProvider;
    }
    getSymbolsForDxFeed(symbols) {
        let result, i;
        result = new Array(symbols.length);
        for (i = 0; i <= symbols.length - 1; i += 1) {
            result[i] = this.getSymbolForDxFeed(symbols[i]);
        }
        return result;
    }
    getSymbolForDxFeed(symbol) {
        let result;
        if (this.instrumentsProvider != null) {
            result = this.instrumentsProvider.getDxfeedSymbolBySymbol(symbol);
            if (result != null && stdlib.len(result) > 0) {
                return result;
            }
        }
        return symbol;
    }
    getOfferIdBySymbol(symbol) {
        let instrumentDescriptor;
        instrumentDescriptor = this.instrumentsProvider.getInstrumentDescriptorBySymbol(symbol);
        if (instrumentDescriptor != null) {
            return instrumentDescriptor.getOfferId();
        }
        return null;
    }
}
module.exports = DxFeedNamesProvider
