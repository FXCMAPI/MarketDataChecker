'use strict';
let DateTimeParser = require('./DateTimeParser.js');
let stdlib = require('@gehtsoft/LuaxStdlib-node').stdlib;
class LoggerJsonMessageBuilder {
    result;
    constructor() {
        this.result = "{\"time\": \"" + this.getTimestamp() + "\"";
    }
    setMessage(message) {
        this.result = this.result + ", \"message\": \"" + message + "\"";
        return this;
    }
    withStringField(key, value) {
        this.result = this.result + ", \"" + key + "\": \"" + value + "\"";
        return this;
    }
    withIntegerField(key, value) {
        this.result = this.result + ", \"" + key + "\": " + (value).toString();
        return this;
    }
    withRealField(key, value) {
        this.result = this.result + ", \"" + key + "\": " + (value).toString();
        return this;
    }
    withBooleanField(key, value) {
        this.result = this.result + ", \"" + key + "\": " + (value).toString();
        return this;
    }
    withException(ex) {
        this.result = this.result + ", \"exceptionMessage\": \"" + ex.getMessage() + "\", \"exceptionCode\": \"" + (ex.getCode()).toString() + "\"";
        return this;
    }
    build() {
        this.result = this.result + "}";
        return this.result;
    }
    getTimestamp() {
        return DateTimeParser.toShortIso(stdlib.nowlocal());
    }
}
module.exports = LoggerJsonMessageBuilder
