'use strict';
let OfferUpdate = require('./OfferUpdate.js');
let OfferBuilder = require('./OfferBuilder.js');
let FieldChangeChecker = require('./FieldChangeChecker.js');
let variantCast = require('@gehtsoft/LuaxStdlib-node').variantCast;
let DateTimeParser = require('./DateTimeParser.js');
class OfferUpdateBuilder extends OfferUpdate {
    offerBuilder;
    constructor() {
        super();
        this.offerBuilder = new OfferBuilder();
    }
    setOfferId(offerId) {
        this.offerBuilder.setOfferId(offerId);
    }
    setQuoteId(quoteId) {
        this.isQuoteIdChangedField = false;
        if (FieldChangeChecker.isFieldChange(quoteId)) {
            this.offerBuilder.setQuoteId(quoteId);
            this.isQuoteIdChangedField = true;
        }
    }
    setBid(bid) {
        this.isBidChangedField = false;
        if (FieldChangeChecker.isFieldChange(bid)) {
            this.offerBuilder.setBid(variantCast.fromString(bid).asReal());
            this.isBidChangedField = true;
        }
    }
    setBidAsReal(bid) {
        this.offerBuilder.setBid(bid);
        this.isBidChangedField = true;
    }
    setAsk(ask) {
        this.isAskChangedField = false;
        if (FieldChangeChecker.isFieldChange(ask)) {
            this.offerBuilder.setAsk(variantCast.fromString(ask).asReal());
            this.isAskChangedField = true;
        }
    }
    setAskAsReal(ask) {
        this.offerBuilder.setAsk(ask);
        this.isAskChangedField = true;
    }
    setBidTradable(bidTradable) {
        this.isBidTradableChangedField = false;
        if (FieldChangeChecker.isFieldChange(bidTradable)) {
            this.offerBuilder.setBidTradable(bidTradable);
            this.isBidTradableChangedField = true;
        }
    }
    setAskTradable(askTradable) {
        this.isAskTradableChangedField = false;
        if (FieldChangeChecker.isFieldChange(askTradable)) {
            this.offerBuilder.setAskTradable(askTradable);
            this.isAskTradableChangedField = true;
        }
    }
    setHigh(high) {
        this.isHighChangedField = false;
        if (FieldChangeChecker.isFieldChange(high)) {
            this.offerBuilder.setHigh(variantCast.fromString(high).asReal());
            this.isHighChangedField = true;
        }
    }
    setHighAsReal(high) {
        this.offerBuilder.setHigh(high);
        this.isHighChangedField = true;
    }
    setLow(low) {
        this.isLowChangedField = false;
        if (FieldChangeChecker.isFieldChange(low)) {
            this.offerBuilder.setLow(variantCast.fromString(low).asReal());
            this.isLowChangedField = true;
        }
    }
    setLowAsReal(low) {
        this.offerBuilder.setLow(low);
        this.isLowChangedField = true;
    }
    setVolume(volume) {
        this.isVolumeChangedField = false;
        if (FieldChangeChecker.isFieldChange(volume)) {
            this.offerBuilder.setVolume(variantCast.fromString(volume).asInt());
            this.isVolumeChangedField = true;
        }
    }
    setVolumeAsInt(volume) {
        this.offerBuilder.setVolume(volume);
        this.isVolumeChangedField = true;
    }
    setTime(time) {
        this.isTimeChangedField = false;
        if (FieldChangeChecker.isFieldChange(time)) {
            this.offerBuilder.setTime(DateTimeParser.parseDateTimeFromString(time));
            this.isTimeChangedField = true;
        }
    }
    setTimeAsDate(time) {
        this.offerBuilder.setTime(time);
        this.isTimeChangedField = true;
    }
    build() {
        this.offer = this.offerBuilder.build();
        return this;
    }
}
module.exports = OfferUpdateBuilder
