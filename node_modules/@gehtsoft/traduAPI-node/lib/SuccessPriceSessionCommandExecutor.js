'use strict';
class SuccessPriceSessionCommandExecutor {
    priceSessionProvider;
    static create(priceSessionProvider) {
        let successPriceSessionCommandExecutor;
        successPriceSessionCommandExecutor = new SuccessPriceSessionCommandExecutor();
        successPriceSessionCommandExecutor.priceSessionProvider = priceSessionProvider;
        return successPriceSessionCommandExecutor;
    }
    setSuccessor(priceSessionCommandExecutor) {
        return void(0);
    }
    execute(pdasPriceTerminalControllerCallback) {
        if (this.priceSessionProvider.getSession() != null) {
            pdasPriceTerminalControllerCallback.onSuccess(this.priceSessionProvider.getSession());
        }
        else {
            pdasPriceTerminalControllerCallback.onError("The pdas price session is empty.");
        }
    }
    stop() {
        return void(0);
    }
}
module.exports = SuccessPriceSessionCommandExecutor
