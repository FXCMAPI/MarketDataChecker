'use strict';
let AManagerAccountWrapperStorage = require('./AManagerAccountWrapperStorage.js');
let OpenPositionsProvider = require('./OpenPositionsProvider.js');
let PositionsSummaryManager = require('./PositionsSummaryManager.js');
class PositionsSummaryManagerAccountWrapperStorage extends AManagerAccountWrapperStorage {
    openPositionsManagerAccountWrapperStorage;
    openPositionCalculator;
    connectionStatusManager;
    instrumentsManager;
    offersManager;
    messageRouter;
    rawAccountsProvider;
    toAccountCCYConverter;
    systemSettingsProvider;
    static create(connectionStatusManager, messageRouter, instrumentsManager, offersManager, openPositionsManagerAccountWrapperStorage, openPositionCalculator, rawAccountsProvider, toAccountCCYConverter, systemSettingsProvider) {
        let instance;
        instance = new PositionsSummaryManagerAccountWrapperStorage();
        instance.connectionStatusManager = connectionStatusManager;
        instance.messageRouter = messageRouter;
        instance.instrumentsManager = instrumentsManager;
        instance.offersManager = offersManager;
        instance.openPositionsManagerAccountWrapperStorage = openPositionsManagerAccountWrapperStorage;
        instance.openPositionCalculator = openPositionCalculator;
        instance.rawAccountsProvider = rawAccountsProvider;
        instance.toAccountCCYConverter = toAccountCCYConverter;
        instance.systemSettingsProvider = systemSettingsProvider;
        return instance;
    }
    createManagerByAccount(accountInfo) {
        let openPositionsProvider, openPositionsManager;
        openPositionsManager = this.openPositionsManagerAccountWrapperStorage.get(accountInfo);
        openPositionsProvider = OpenPositionsProvider.create(openPositionsManager, this.openPositionCalculator);
        return PositionsSummaryManager.create(this.connectionStatusManager, this.messageRouter, this.instrumentsManager, this.offersManager, openPositionsManager, openPositionsProvider, this.rawAccountsProvider, this.toAccountCCYConverter, this.systemSettingsProvider);
    }
    get(accountInfo) {
        return this.getObjectByAccount(accountInfo);
    }
}
module.exports = PositionsSummaryManagerAccountWrapperStorage
