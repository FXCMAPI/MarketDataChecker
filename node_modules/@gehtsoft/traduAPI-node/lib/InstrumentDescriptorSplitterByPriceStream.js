'use strict';
let list = require('@gehtsoft/LuaxStdlib-node').list;
let string_map = require('@gehtsoft/LuaxStdlib-node').string_map;
let CollectionUtils = require('./CollectionUtils.js');
let InstrumentDescriptorsGroupedByPriceStream = require('./InstrumentDescriptorsGroupedByPriceStream.js');
class InstrumentDescriptorSplitterByPriceStream {
    split(instrumentDescriptors) {
        let i, descriptor, priceStreams, offerIds, descriptorsByStreamId;
        priceStreams = new list();
        offerIds = new list();
        descriptorsByStreamId = new string_map();
        for (i = 0; i <= instrumentDescriptors.length - 1; i += 1) {
            descriptor = instrumentDescriptors[i];
            CollectionUtils.addStringToList(priceStreams, descriptor.getPriceStreamId());
            CollectionUtils.addStringToList(offerIds, descriptor.getOfferId());
            this.addDescriptorToMap(descriptorsByStreamId, descriptor);
        }
        return InstrumentDescriptorsGroupedByPriceStream.create(CollectionUtils.stringListToArray(priceStreams), CollectionUtils.stringListToArray(offerIds), descriptorsByStreamId);
    }
    addDescriptorToMap(descriptorsByStreamId, descriptor) {
        let collection;
        if (descriptorsByStreamId.contains(descriptor.getPriceStreamId())) {
            collection = descriptorsByStreamId.get(descriptor.getPriceStreamId());
        }
        else {
            collection = new list();
            descriptorsByStreamId.set(descriptor.getPriceStreamId(), collection);
        }
        collection.add(descriptor);
    }
}
module.exports = InstrumentDescriptorSplitterByPriceStream
