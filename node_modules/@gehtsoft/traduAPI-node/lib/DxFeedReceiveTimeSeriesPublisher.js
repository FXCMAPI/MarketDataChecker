'use strict';
let CommonPublisher = require('./CommonPublisher.js');
class DxFeedReceiveTimeSeriesPublisher {
    publisher;
    constructor() {
        this.publisher = new CommonPublisher();
    }
    subscribe(callback) {
        this.publisher.subscribe(callback);
    }
    unsubscribe(callback) {
        this.publisher.unsubscribe(callback);
    }
    notifyReceivedTimeSeries(dXFeedTimeSeries) {
        this.publisher.notifyAction(DxFeedReceiveTimeSeriesPublisher.ReceivedTimeSeriesAction.create(dXFeedTimeSeries));
    }
}
module.exports = DxFeedReceiveTimeSeriesPublisher
DxFeedReceiveTimeSeriesPublisher.ReceivedTimeSeriesAction = class {
    listener;
    dXFeedTimeSeries;
    _owner_;
    constructor(_owner_) {
        this._owner_ = _owner_;
    }
    static create(dXFeedTimeSeries) {
        let result;
        result = new DxFeedReceiveTimeSeriesPublisher.ReceivedTimeSeriesAction(this);
        result.dXFeedTimeSeries = dXFeedTimeSeries;
        return result;
    }
    setListener(listener) {
        this.listener = listener;
    }
    execute() {
        this.listener.onTimeSeriesReceived(this.dXFeedTimeSeries);
    }
}
