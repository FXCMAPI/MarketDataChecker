'use strict';
let APdasRequestMessage = require('./APdasRequestMessage.js');
let stdlib = require('@gehtsoft/LuaxStdlib-node').stdlib;
let PdasMessageFieldFactory = require('./PdasMessageFieldFactory.js');
let PdasMessageSerializer = require('./PdasMessageSerializer.js');
let PdasMessageType = require('./PdasMessageType.js');
let PdasMessageFieldTag = require('./PdasMessageFieldTag.js');
let PdasConstants = require('./PdasConstants.js');
let PdasTransportMessage = require('./PdasTransportMessage.js');
class PdasSessionStatusRequestMessage extends APdasRequestMessage {
    build(session, login, terminal, priceTerminal, messageType, requestNumberGenerator) {
        let pdasMessageSerializer, factory, pdasMessage, requestId, result, terminalUrl, subId;
        terminalUrl = terminal.getUrls()[0];
        subId = terminal.getSubId();
        if (priceTerminal != null) {
            terminalUrl = priceTerminal.getUrls()[0];
            if (priceTerminal.getSubId() != null && stdlib.len(priceTerminal.getSubId()) > 0) {
                subId = priceTerminal.getSubId();
            }
        }
        requestId = session + "-" + (requestNumberGenerator.getNextRequestNumber()).toString();
        factory = new PdasMessageFieldFactory();
        pdasMessageSerializer = new PdasMessageSerializer();
        pdasMessage = factory.createMessage(PdasMessageType.USER_REQUEST);
        pdasMessage.addChild(factory.createStringField(PdasMessageFieldTag.TEST_REQUEST_ID, requestId));
        pdasMessage.addChild(factory.createStringField(PdasMessageFieldTag.TRADING_SESSION_ID, terminal.getId()));
        pdasMessage.addChild(factory.createStringField(PdasMessageFieldTag.MSG_TYPE, PdasMessageType.USER_REQUEST));
        pdasMessage.addChild(factory.createStringField(PdasMessageFieldTag.USER_NAME, login));
        pdasMessage.addChild(factory.createStringField(PdasMessageFieldTag.TRADING_SESSION_SUB_ID, subId));
        pdasMessage.addChild(factory.createStringField(PdasMessageFieldTag.USER_REQUEST_ID, requestId));
        pdasMessage.addChild(factory.createIntField(PdasMessageFieldTag.USER_REQUEST_TYPE, 0));
        pdasMessage.addChild(factory.createStringField(PdasConstants.SID, session));
        result = PdasTransportMessage.create(messageType, this.createRequestUrl(terminalUrl), pdasMessageSerializer.serialize(pdasMessage));
        return result;
    }
}
module.exports = PdasSessionStatusRequestMessage
