'use strict';
let list = require('@gehtsoft/LuaxStdlib-node').list;
let InstrumentDescriptorFindingResult = require('./InstrumentDescriptorFindingResult.js');
class InstrumentDescriptorFinderBySymbol {
    descriptorsStorage;
    static create(descriptorsStorage) {
        let result;
        result = new InstrumentDescriptorFinderBySymbol();
        result.descriptorsStorage = descriptorsStorage;
        return result;
    }
    find(symbols) {
        let descriptors, result, descriptor, error, i;
        error = null;
        descriptors = new list();
        for (i = 0; i <= symbols.length - 1; i += 1) {
            descriptor = this.descriptorsStorage.getInstrumentDescriptorBySymbol(symbols[i]);
            if (descriptor != null) {
                descriptors.add(descriptor);
            }
            else {
                error = this.addError(error, symbols[i]);
            }
        }
        result = new Array(descriptors.length());
        for (i = 0; i <= descriptors.length() - 1; i += 1) {
            result[i] = descriptors.get(i);
        }
        return InstrumentDescriptorFindingResult.create(result, error);
    }
    addError(error, symbol) {
        let result;
        result = error;
        if (result == null) {
            result = "Not found instruments for symbols: " + symbol;
        }
        else {
            result = result + ", " + symbol;
        }
        return result;
    }
}
module.exports = InstrumentDescriptorFinderBySymbol
