'use strict';
let CommonPublisher = require('./CommonPublisher.js');
class DXFeedConnectionStatePublisher {
    publisher;
    constructor() {
        this.publisher = new CommonPublisher();
    }
    subscribe(callback) {
        this.publisher.subscribe(callback);
    }
    unsubscribe(callback) {
        this.publisher.unsubscribe(callback);
    }
    notifyStateChange(state) {
        this.publisher.notifyAction(DXFeedConnectionStatePublisher.ConnectionStateChangedAction.create(state));
    }
}
module.exports = DXFeedConnectionStatePublisher
DXFeedConnectionStatePublisher.ConnectionStateChangedAction = class {
    listener;
    state;
    _owner_;
    constructor(_owner_) {
        this._owner_ = _owner_;
    }
    static create(state) {
        let result;
        result = new DXFeedConnectionStatePublisher.ConnectionStateChangedAction(this);
        result.state = state;
        return result;
    }
    setListener(listener) {
        this.listener = listener;
    }
    execute() {
        this.listener.onStateChange(this.state);
    }
}
