'use strict';
class InstrumentsProvider {
    manager;
    static create(manager) {
        let result;
        result = new InstrumentsProvider();
        result.manager = manager;
        return result;
    }
    isPriceStreamHasSubscribedInstruments(streamId) {
        return this.manager.isPriceStreamHasSubscribedInstruments(streamId);
    }
    getInstrumentByOfferId(offerId) {
        return this.manager.getInstrumentByOfferId(offerId);
    }
    getInstrumentBySymbol(symbol) {
        return this.manager.getInstrumentBySymbol(symbol);
    }
    getAllInstrumentDescriptors() {
        return this.manager.getAllInstrumentDescriptors();
    }
    getInstrumentDescriptorByOfferId(offerId) {
        return this.manager.getInstrumentDescriptorByOfferId(offerId);
    }
    getInstrumentDescriptorBySymbol(symbol) {
        return this.manager.getInstrumentDescriptorBySymbol(symbol);
    }
    getInstrumentDescriptorByDxfeedSymbol(symbol) {
        return this.manager.getInstrumentDescriptorByDxfeedSymbol(symbol);
    }
    getDxfeedSymbolBySymbol(symbol) {
        return this.manager.getDxfeedSymbolBySymbol(symbol);
    }
    getOrLoadInstrumentsByOfferIds(offerIds, callback) {
        this.manager.getOrLoadInstrumentsByOfferIds(offerIds, callback);
    }
    getInstrumentsSnapshot(offerIds, callback) {
        this.manager.getInstrumentsSnapshot(offerIds, callback);
    }
}
module.exports = InstrumentsProvider
