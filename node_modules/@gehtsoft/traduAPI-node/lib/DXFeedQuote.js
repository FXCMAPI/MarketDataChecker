'use strict';
let stdlib = require('@gehtsoft/LuaxStdlib-node').stdlib;
class DXFeedQuote {
    symbol;
    bidTime;
    askTime;
    bid;
    ask;
    bidSize;
    askSize;
    bidExchangeCode;
    askExchangeCode;
    constructor() {
        this.symbol = "";
        this.bidTime = stdlib.mkdatetime(1900, 1, 1, 0, 0, 0, 0);
        this.askTime = stdlib.mkdatetime(1900, 1, 1, 0, 0, 0, 0);
        this.bid = 0.0;
        this.ask = 0.0;
        this.bidSize = 0.0;
        this.askSize = 0.0;
        this.bidExchangeCode = "";
        this.askExchangeCode = "";
    }
    getSymbol() {
        return this.symbol;
    }
    getBidTime() {
        return this.bidTime;
    }
    getAskTime() {
        return this.askTime;
    }
    getBid() {
        return this.bid;
    }
    getAsk() {
        return this.ask;
    }
    getBidSize() {
        return this.bidSize;
    }
    getAskSize() {
        return this.askSize;
    }
    getBidExchangeCode() {
        return this.bidExchangeCode;
    }
    getAskExchangeCode() {
        return this.askExchangeCode;
    }
    static create(symbol, bidTime, askTime, bid, ask, bidSize, askSize, bidExchangeCode, askExchangeCode) {
        let dXFeedQuote;
        dXFeedQuote = new DXFeedQuote();
        dXFeedQuote.symbol = symbol;
        dXFeedQuote.bidTime = bidTime;
        dXFeedQuote.askTime = askTime;
        dXFeedQuote.bid = bid;
        dXFeedQuote.ask = ask;
        dXFeedQuote.bidSize = bidSize;
        dXFeedQuote.askSize = askSize;
        dXFeedQuote.bidExchangeCode = bidExchangeCode;
        dXFeedQuote.askExchangeCode = askExchangeCode;
        return dXFeedQuote;
    }
}
module.exports = DXFeedQuote
