'use strict';
let DXFeedConnectionState = require('./DXFeedConnectionState.js');
class DXFeedWebSocketStateListener {
    dXFeedConnectionStateManager;
    dxFeedHeartbeatCommand;
    socketCommunicator;
    static create(dXFeedConnectionStateManager, socketCommunicator, dxFeedHeartbeatCommand) {
        let result;
        result = new DXFeedWebSocketStateListener();
        result.dXFeedConnectionStateManager = dXFeedConnectionStateManager;
        result.dxFeedHeartbeatCommand = dxFeedHeartbeatCommand;
        result.socketCommunicator = socketCommunicator;
        socketCommunicator.subscribeStateChange(result);
        return result;
    }
    stop() {
        this.socketCommunicator.unsubscribeStateChange(this);
    }
    onChange(state) {
        let errorMessage;
        if (state.isClosed()) {
            if (state.hasError()) {
                errorMessage = state.getError().getMessage();
                this.dXFeedConnectionStateManager.changeStateWithError(DXFeedConnectionState.DISCONNECTED, errorMessage);
            }
            else {
                this.dXFeedConnectionStateManager.changeState(DXFeedConnectionState.DISCONNECTED);
            }
            this.dxFeedHeartbeatCommand.stop();
        }
    }
}
module.exports = DXFeedWebSocketStateListener
