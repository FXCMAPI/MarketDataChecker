'use strict';
let AFxmsgReader = require('./AFxmsgReader.js');
let csvParser = require('@gehtsoft/LuaxStdlib-node').csvParser;
let OrderCsvParser = require('./OrderCsvParser.js');
let GetOrdersMessageBuilder = require('./GetOrdersMessageBuilder.js');
let PdasMessageFieldTag = require('./PdasMessageFieldTag.js');
let PdasMessageType = require('./PdasMessageType.js');
let PdasRequestCommand = require('./PdasRequestCommand.js');
let OrdersList = require('./OrdersList.js');
class GetOrdersFxmsgReader extends AFxmsgReader {
    linesParser;
    orderCsvParser;
    constructor() {
        super();
        this.linesParser = new csvParser();
        this.linesParser.valueSeparator = "\n";
        this.orderCsvParser = new OrderCsvParser();
    }
    read(responseList, xmlRootNode, messages) {
        let data, accountId, i, messageBuilder, listInstance;
        if (messages == null || messages.length == 0) {
            return;
        }
        messageBuilder = new GetOrdersMessageBuilder();
        for (i = 0; i <= messages.length - 1; i += 1) {
            if (messages[i].getType() == PdasMessageType.FXCM_RESPONSE && messages[i].getFieldValue(PdasMessageFieldTag.FXCM_COMMAND_ID) == PdasRequestCommand.GET_ORDERS) {
                listInstance = messages[i].getList(PdasMessageFieldTag.FXCM_NO_PARAM);
                data = listInstance.getGroupParamValueByParamName("DAS");
                accountId = listInstance.getGroupParamValueByParamName("AcctID");
                if (data != null) {
                    messageBuilder.addOrders(this.parseOrders(data));
                    messageBuilder.setAccountId(accountId);
                    responseList.add(this.createLockedMessage(messageBuilder.build()));
                }
            }
        }
    }
    parseOrders(data) {
        let lines, i, listInstance, entity;
        listInstance = new OrdersList();
        lines = this.linesParser.splitLine(data);
        for (i = 0; i <= lines.length - 1; i += 1) {
            entity = this.orderCsvParser.parse(lines[i]);
            if (entity != null) {
                listInstance.add(entity);
            }
        }
        return listInstance;
    }
}
module.exports = GetOrdersFxmsgReader
