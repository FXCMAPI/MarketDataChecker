'use strict';
class InstrumentsSubscriptionProvider {
    instrumentsManager;
    static create(instrumentsManager) {
        let result;
        result = new InstrumentsSubscriptionProvider();
        result.instrumentsManager = instrumentsManager;
        return result;
    }
    subscribeInstruments(symbols, callback) {
        this.instrumentsManager.subscribeInstruments(symbols, callback);
    }
    checkAndLoadCrossCources(symbols, callback) {
        this.instrumentsManager.checkAndLoadCrossCources(symbols, callback);
    }
    unsubscribeInstruments(symbols, callback) {
        this.instrumentsManager.unsubscribeInstruments(symbols, callback);
    }
    subscribeManagerStateChange(listener) {
        this.instrumentsManager.subscribeStateChange(listener);
    }
    unsubscribeManagerStateChange(listener) {
        this.instrumentsManager.unsubscribeStateChange(listener);
    }
}
module.exports = InstrumentsSubscriptionProvider
