'use strict';
let Account = require('./Account.js');
//@@DocBrief("The builder of the Account class")
class AccountBuilder extends Account {
    toCalculate;
    constructor() {
        super();
        this.toCalculate = false;
    }
    setAccountId(value) {
        this.accountId = value;
    }
    setAccountKind(value) {
        this.accountKind = value;
    }
    setAccountName(value) {
        this.accountName = value;
    }
    setOrderAmountLimit(value) {
        this.orderAmountLimit = value;
    }
    setATPId(value) {
        this.atpId = value;
    }
    setBalance(value) {
        this.balance = value;
    }
    setBaseUnitSize(value) {
        this.baseUnitSize = value;
    }
    setLastMarginCallDate(value) {
        this.lastMarginCallDate = value;
    }
    setLeverageProfileId(value) {
        this.leverageProfileId = value;
    }
    setM2MEquity(value) {
        this.m2mEquity = value;
    }
    setMaintenanceFlag(value) {
        this.maintenanceFlag = value;
    }
    setMaintenanceType(value) {
        this.maintenanceType = value;
    }
    setManagerAccountId(value) {
        this.managerAccountId = value;
    }
    setMarginCallFlag(value) {
        this.marginCallFlag = value;
    }
    setRefreshProfileFlags(value) {
        this.refreshProfileFlags = value;
    }
    setNonTradeEquity(value) {
        this.nonTradeEquity = value;
    }
    setBaseCurrency(baseCurrency) {
        this.baseCurrency = baseCurrency;
    }
    setBaseCurrencyPrecision(baseCurrencyPrecision) {
        this.baseCurrencyPrecision = baseCurrencyPrecision;
    }
    setHedgeMarginPCT(hedgeMarginPCT) {
        this.hedgeMarginPCT = hedgeMarginPCT;
    }
    setRolloverProfileId(rolloverProfileId) {
        this.rolloverProfileId = rolloverProfileId;
    }
    setEquity(value) {
        this.equity = value;
    }
    setGrossPL(value) {
        this.grossPL = value;
    }
    setUsedMargin(value) {
        this.usedMargin = value;
    }
    setUsableMargin(value) {
        this.usableMargin = value;
    }
    setUsableMarginPercentage(value) {
        this.usableMarginPercentage = value;
    }
    setUsedMaintenanceMargin(value) {
        this.usedMaintenanceMargin = value;
    }
    setUsableMaintenanceMargin(value) {
        this.usableMaintenanceMargin = value;
    }
    setUsableMaintenanceMarginPercentage(value) {
        this.usableMaintenanceMarginPercentage = value;
    }
    setDayPL(value) {
        this.dayPL = value;
    }
    isNeedRecalculate() {
        return this.toCalculate;
    }
    setNeedRecalculate(value) {
        this.toCalculate = value;
    }
    build() {
        return this;
    }
}
module.exports = AccountBuilder
