'use strict';
let TestRequestPdsCommand = require('./TestRequestPdsCommand.js');
let MessageType = require('./MessageType.js');
let StringUtil = require('./StringUtil.js');
class TestRequestMdtCommand extends TestRequestPdsCommand {
    priceTerminal;
    constructor() {
        super();
        this.priceTerminal = null;
        this.checkRequest = new TestRequestMdtCommand.CheckRequest(this);
    }
    getCommandName() {
        return "TestRequestMdtCommand";
    }
    createMessageType() {
        return MessageType.TestRequestMdt;
    }
    getTransportMessage() {
        return this.messageFactory.createTestRequestForMdtRequestMessage(this.session, this.priceTerminal, this.requestNumber);
    }
    notifySuccess(heartbeatMessage) {
        this.testRequestCommandCallback.onSuccess(heartbeatMessage.getSubscribedSymbolsCheckSum(), heartbeatMessage.getNumberOfSubscribedSymbols(), this.priceTerminal.getStreams(), this.priceTerminal.getSubId());
    }
    getSession() {
        return super.getSession();
    }
    setSession(session) {
        super.setSession(session);
    }
}
module.exports = TestRequestMdtCommand
TestRequestMdtCommand.CheckRequest = class {
    _owner_;
    constructor(_owner_) {
        this._owner_ = _owner_;
    }
    isMyRequest(requestId) {
        return StringUtil.getSessionId(requestId) == this._owner_.getSession().getSessionId();
    }
}
