'use strict';
let DxFeedSubscriptionCommand = require('./DxFeedSubscriptionCommand.js');
class DxFeedQuotesSubscriptionCommand extends DxFeedSubscriptionCommand {
    symbols;
    constructor() {
        super();
        this.symbols = [];
    }
    static create(socketCommunicator, dXFeedMessageFactory, callback, clientId, symbols, commandType) {
        let result;
        result = new DxFeedQuotesSubscriptionCommand();
        result.initBase(socketCommunicator, dXFeedMessageFactory, callback, clientId, commandType);
        result.symbols = symbols;
        return result;
    }
    createDxFeedSubscribeMessage() {
        return this.dXFeedMessageFactory.createSubscribeForQuotesMessage(this.clientId, this.symbols);
    }
    createDxFeedUnsubscribeMessage() {
        return this.dXFeedMessageFactory.createUnsubscribeFromQuotesMessage(this.clientId, this.symbols);
    }
}
module.exports = DxFeedQuotesSubscriptionCommand
