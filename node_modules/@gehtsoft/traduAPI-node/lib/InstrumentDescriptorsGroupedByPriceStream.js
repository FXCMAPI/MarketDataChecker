'use strict';
class InstrumentDescriptorsGroupedByPriceStream {
    priceStreams;
    offerIds;
    descriptorsByStreamId;
    static create(priceStreams, offerIds, descriptorsByStreamId) {
        let result;
        result = new InstrumentDescriptorsGroupedByPriceStream();
        result.priceStreams = priceStreams;
        result.offerIds = offerIds;
        result.descriptorsByStreamId = descriptorsByStreamId;
        return result;
    }
    getPriceStreams() {
        return this.priceStreams;
    }
    getInstrumentDescriptors(priceStream) {
        let collection, result, i;
        if (this.descriptorsByStreamId.contains(priceStream)) {
            collection = this.descriptorsByStreamId.get(priceStream);
        }
        if (collection == null) {
            return [];
        }
        result = new Array(collection.length());
        for (i = 0; i <= collection.length() - 1; i += 1) {
            result[i] = collection.get(i);
        }
        return result;
    }
    getAllOffersIds() {
        return this.offerIds;
    }
    getOffersIds(priceStream) {
        let collection, result, i;
        if (this.descriptorsByStreamId.contains(priceStream)) {
            collection = this.descriptorsByStreamId.get(priceStream);
        }
        if (collection == null) {
            return [];
        }
        result = new Array(collection.length());
        for (i = 0; i <= collection.length() - 1; i += 1) {
            result[i] = collection.get(i).getOfferId();
        }
        return result;
    }
}
module.exports = InstrumentDescriptorsGroupedByPriceStream
