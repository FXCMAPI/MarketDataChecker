'use strict';
let LogManager = require('./LogManager.js');
let stdlib = require('@gehtsoft/LuaxStdlib-node').stdlib;
let variantCast = require('@gehtsoft/LuaxStdlib-node').variantCast;
let jsonNode = require('@gehtsoft/LuaxStdlib-node').jsonNode;
class JsonReaderUtil {
    static getRealFromJsonNode(node) {
        let retVal, strValue, ex, loggerInstance;
        loggerInstance = LogManager.getLogger();
        retVal = 0.0;
        if (node.getType() == jsonNode.STRING) {
            strValue = node.getValueAsString();
            if (stdlib.lower(strValue) != "nan") {
                try {
                    retVal = variantCast.castToReal(variantCast.fromString(strValue));
                } catch(exTemp1) {
                    ex = stdlib.ensureException(exTemp1);
                    loggerInstance.warning("JsonReaderUtil.getRealFromJsonNode() exception: " + ex.getMessage());
                }
            }
        } else if (node.getType() == jsonNode.REAL) {
            retVal = node.getValueAsReal();
        } else if (node.getType() == jsonNode.INT) {
            retVal = node.getValueAsInt();
        }
        return retVal;
    }
}
module.exports = JsonReaderUtil
