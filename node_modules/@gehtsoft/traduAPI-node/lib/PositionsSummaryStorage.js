'use strict';
let string_map = require('@gehtsoft/LuaxStdlib-node').string_map;
//@@DocBrief("class provides access to a collection of positions summary information")
class PositionsSummaryStorage {
    storage;
    constructor() {
        this.storage = new string_map();
    }
    addOpenPosition(instrument, tradeId) {
        let positions;
        if (!this.storage.contains(instrument)) {
            positions = new string_map();
        }
        else {
            positions = this.storage.get(instrument);
        }
        positions.set(tradeId, null);
        this.storage.set(instrument, positions);
    }
    removeOpenPosition(instrument, tradeId) {
        let positions;
        if (this.storage.contains(instrument)) {
            positions = this.storage.get(instrument);
            positions.remove(tradeId);
            if (positions.length() == 0) {
                this.storage.remove(instrument);
            }
        }
    }
    symbolHasOnlyOpenPosition(instrument, tradeId) {
        let positions;
        if (this.storage.contains(instrument)) {
            positions = this.storage.get(instrument);
            return positions.length() == 1 && positions.contains(tradeId);
        }
        return false;
    }
    removeInstrument(instrument) {
        if (this.storage.contains(instrument)) {
            this.storage.remove(instrument);
        }
    }
    containsInstrument(instrument) {
        return this.storage.contains(instrument);
    }
    clear() {
        this.storage.clear();
    }
    getAllInstruments() {
        return this.storage.keys();
    }
    getTradeIds(instrument) {
        if (this.storage.contains(instrument)) {
            return this.storage.get(instrument).keys();
        }
        return [];
    }
}
module.exports = PositionsSummaryStorage
