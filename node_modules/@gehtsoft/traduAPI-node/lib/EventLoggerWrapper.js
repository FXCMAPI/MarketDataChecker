'use strict';
class EventLoggerWrapper {
    logger;
    constructor() {
        this.logger = null;
    }
    setLogger(logger) {
        this.logger = logger;
    }
    error(errorEvent) {
        if (this.logger != null) {
            this.logger.error(errorEvent);
        }
    }
    performance(executionTimeEvent) {
        if (this.logger != null) {
            this.logger.performance(executionTimeEvent);
        }
    }
    performanceTraceStart(name, parent) {
        if (this.logger != null) {
            this.logger.performanceTraceStart(name, parent);
        }
    }
    performanceTraceFinish(id, name) {
        if (this.logger != null) {
            this.logger.performanceTraceFinish(id, name);
        }
    }
    performanceTraceFinishWithError(id, name) {
        if (this.logger != null) {
            this.logger.performanceTraceFinishWithError(id, name);
        }
    }
}
module.exports = EventLoggerWrapper
