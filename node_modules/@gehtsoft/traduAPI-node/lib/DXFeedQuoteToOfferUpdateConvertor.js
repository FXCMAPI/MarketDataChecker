'use strict';
let OfferUpdateBuilder = require('./OfferUpdateBuilder.js');
class DXFeedQuoteToOfferUpdateConvertor {
    instrumentsProvider;
    parametersController;
    static create(instrumentsProvider, parametersController) {
        let result;
        result = new DXFeedQuoteToOfferUpdateConvertor();
        result.instrumentsProvider = instrumentsProvider;
        result.parametersController = parametersController;
        return result;
    }
    convert(quote) {
        let builder, symbol;
        symbol = quote.getSymbol();
        builder = new OfferUpdateBuilder();
        builder.setOfferId(this.getOfferId(symbol));
        builder.setBidAsReal(quote.getBid());
        builder.setAskAsReal(quote.getAsk());
        builder.setBidTradable("T");
        builder.setAskTradable("T");
        builder.setHighAsReal(this.parametersController.getHighBySymbol(symbol));
        builder.setLowAsReal(this.parametersController.getLowBySymbol(symbol));
        builder.setVolumeAsInt(this.parametersController.getVolumeBySymbol(symbol));
        builder.setQuoteId("");
        builder.setTimeAsDate(quote.getBidTime());
        return builder.build();
    }
    getOfferId(symbol) {
        let descriptor;
        descriptor = this.instrumentsProvider.getInstrumentDescriptorByDxfeedSymbol(symbol);
        if (descriptor != null) {
            return descriptor.getOfferId();
        }
        return "";
    }
}
module.exports = DXFeedQuoteToOfferUpdateConvertor
