'use strict';
let Instrument = require('./Instrument.js');
let RealValueObject = require('./RealValueObject.js');
//@@DocBrief("The builder of the Instrument class")
class InstrumentBuilder extends Instrument {
    setOfferId(offerId) {
        this.offerId = offerId;
    }
    setSymbol(symbol) {
        this.symbol = symbol;
    }
    setContractCurrency(contractCurrency) {
        this.contractCurrency = contractCurrency;
    }
    setDigits(digits) {
        this.digits = digits;
    }
    setPointSize(pointSize) {
        this.pointSize = pointSize;
    }
    setInstrumentType(instrumentType) {
        this.instrumentType = instrumentType;
    }
    setTradingStatus(tradingStatus) {
        this.tradingStatus = tradingStatus;
    }
    setContractMultiplier(contractMultiplier) {
        this.contractMultiplier = contractMultiplier;
    }
    setSellInterest(sellInterest) {
        this.sellInterest = sellInterest;
    }
    setBuyInterest(buyInterest) {
        this.buyInterest = buyInterest;
    }
    setSubscriptionStatus(subscriptionStatus) {
        this.subscriptionStatus = subscriptionStatus;
    }
    setHasDividendBuy(hasDividendBuyArg) {
        this.hasDividendBuyField = hasDividendBuyArg;
    }
    setDividendBuy(dividendBuy) {
        this.dividendBuy = dividendBuy;
    }
    setHasDividendSell(hasDividendSellArg) {
        this.hasDividendSellField = hasDividendSellArg;
    }
    setDividendSell(dividendSell) {
        this.dividendSell = dividendSell;
    }
    setBaseUnitSize(baseUnitSize) {
        this.baseUnitSize = baseUnitSize;
    }
    setMinQuantity(minQuantity) {
        this.minQuantity = minQuantity;
    }
    setMaxQuantity(maxQuantity) {
        this.maxQuantity = maxQuantity;
    }
    setSortOrder(sortOrder) {
        this.sortOrder = sortOrder;
    }
    setPriceStreamId(priceStreamId) {
        this.priceStreamId = priceStreamId;
    }
    setConditionDistStop(conditionDistStop) {
        this.conditionDistStop = conditionDistStop;
    }
    setConditionDistLimit(conditionDistLimit) {
        this.conditionDistLimit = conditionDistLimit;
    }
    setConditionDistEntryStop(conditionDistEntryStop) {
        this.conditionDistEntryStop = conditionDistEntryStop;
    }
    setConditionDistEntryLimit(conditionDistEntryLimit) {
        this.conditionDistEntryLimit = conditionDistEntryLimit;
    }
    setAskAdjustment(askAdjustment) {
        this.askAdjustment = askAdjustment;
    }
    setBidAdjustment(bidAdjustment) {
        this.bidAdjustment = bidAdjustment;
    }
    setFractionalPipSize(value) {
        this.fractionalPipSize = value;
        this.isFractionalPipSizeSet = true;
    }
    resetFractionalPipSize() {
        this.isFractionalPipSizeSet = false;
    }
    setMMR(mmr) {
        this.mmr = mmr;
    }
    setMMRByCurrency(currency, mmr) {
        this.mmrByCyrrency.set(currency, RealValueObject.create(mmr));
    }
    build() {
        return this;
    }
}
module.exports = InstrumentBuilder
