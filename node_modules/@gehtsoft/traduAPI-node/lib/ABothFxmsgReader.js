'use strict';
let AFxmsgReader = require('./AFxmsgReader.js');
let FxmsgReaderUtil = require('./FxmsgReaderUtil.js');
let PdasMessageType = require('./PdasMessageType.js');
let PdasMessageFieldTag = require('./PdasMessageFieldTag.js');
let stdlib = require('@gehtsoft/LuaxStdlib-node').stdlib;
let XmlReaderUtil = require('./XmlReaderUtil.js');
let xmlNode = require('@gehtsoft/LuaxStdlib-node').xmlNode;
class ABothFxmsgReader extends AFxmsgReader {
    getCommand() {
        return "";
    }
    read(responseList, xmlRootNode, messages) {
        let messageNode, message, i, data;
        messageNode = FxmsgReaderUtil.getMessageNode(xmlRootNode, PdasMessageType.USER_RESPONSE);
        if (messageNode != null) {
            this.processMessage(responseList, messageNode);
        }
        else {
            if (messages == null || messages.length == 0) {
                return;
            }
            for (i = 0; i <= messages.length - 1; i += 1) {
                message = messages[i];
                if (message.getType() == PdasMessageType.FXCM_RESPONSE && message.getFieldValue(PdasMessageFieldTag.FXCM_COMMAND_ID) == this.getCommand()) {
                    data = message.getList(PdasMessageFieldTag.FXCM_NO_PARAM).getGroupParamValueByParamName("DAS");
                    if (data != null) {
                        this.processData(responseList, data);
                    }
                }
            }
        }
    }
    processData(responseList, data) {
        return void(0);
    }
    processMessage(responseList, messageNode) {
        return void(0);
    }
    getTextFromGroup(g, extraCode) {
        let fieldText, fieldName, iChild, k;
        if (g.getType() == xmlNode.ELEMENT) {
            fieldName = null;
            fieldText = null;
            for (k = 0; k <= g.getChildrenCount() - 1; k += 1) {
                iChild = g.getChild(k);
                if (iChild.getType() == xmlNode.ELEMENT) {
                    if (XmlReaderUtil.isAttrEqualTo(iChild, "n", PdasMessageFieldTag.FXCM_PARAM_NAME)) {
                        fieldName = stdlib.trim(XmlReaderUtil.getNodeText(iChild));
                    } else if (XmlReaderUtil.isAttrEqualTo(iChild, "n", PdasMessageFieldTag.FXCM_PARAM_VALUE)) {
                        fieldText = stdlib.trim(XmlReaderUtil.getNodeText(iChild));
                    }
                }
            }
            if (fieldName == extraCode) {
                return fieldText;
            }
        }
        return null;
    }
}
module.exports = ABothFxmsgReader
