'use strict';
let variantCast = require('@gehtsoft/LuaxStdlib-node').variantCast;
let stdlib = require('@gehtsoft/LuaxStdlib-node').stdlib;
let TrailingTypeInitializer = require('./TrailingTypeInitializer.js');
//@@DocBrief("The class provides access to the system settings and properties")
class SystemSettingsProvider {
    controller;
    trailingType;
    constructor() {
        this.trailingType = null;
    }
    static create(controller) {
        let result;
        result = new SystemSettingsProvider();
        result.controller = controller;
        return result;
    }
    subscribeSystemPropertyChange(listener) {
        this.controller.subscribeSystemPropertyChange(listener);
    }
    unsubscribeSystemPropertyChange(listener) {
        this.controller.unsubscribeSystemPropertyChange(listener);
    }
    isPasswordExpired() {
        let result;
        result = this.controller.getPropertyByName("FORCE_PASSWORD_CHANGE");
        return "Y" == result;
    }
    getBaseUnitSize() {
        let stringValue;
        stringValue = this.controller.getPropertyByName("BASE_UNIT_SIZE");
        if (stringValue != null && stdlib.len(stringValue) > 0) {
            return variantCast.fromString(stringValue).asInt();
        }
        return 0;
    }
    getBaseCurrency() {
        return this.controller.getPropertyByName("BASE_CRNCY");
    }
    getBaseCurrencyPrecision() {
        let stringValue;
        stringValue = this.controller.getPropertyByName("BASE_CRNCY_PRECISION");
        if (stringValue != null && stdlib.len(stringValue) > 0) {
            return variantCast.fromString(stringValue).asInt();
        }
        return 0;
    }
    getReportUrl(account, from, to, type, format, langID, callback) {
        this.controller.getReportUrl(account, from, to, type, format, langID, callback);
    }
    getAccountUrl(callback) {
        this.controller.getAccountUrl(callback);
    }
    getPushBindURL() {
        return this.controller.getPushBindURL();
    }
    getPush2URL() {
        return this.controller.getPush2URL();
    }
    getApplyNowURL() {
        return this.controller.getApplyNowURL();
    }
    getUserKind() {
        return this.controller.getUserKind();
    }
    getPropertyByName(name) {
        return this.controller.getPropertyByName(name);
    }
    getTrailingType() {
        if (this.trailingType == null) {
            this.trailingType = TrailingTypeInitializer.create(this.controller).getTrailingType();
        }
        return this.trailingType;
    }
    subscribeLoaded(listener) {
        this.controller.subscribeLoaded(listener);
    }
    unsubscribeLoaded(listener) {
        this.controller.unsubscribeLoaded(listener);
    }
}
module.exports = SystemSettingsProvider
