'use strict';
let TerminalUrl = require('./TerminalUrl.js');
let stdlib = require('@gehtsoft/LuaxStdlib-node').stdlib;
let csvParser = require('@gehtsoft/LuaxStdlib-node').csvParser;
//@@DocBrief("The builder of the TerminalUrl class")
class TerminalUrlBuilder extends TerminalUrl {
    paramsString;
    urlString;
    setName(name) {
        this.name = name;
    }
    setUrl(url) {
        this.urlString = url;
    }
    setProtocol(protocol) {
        this.httpProtocol = protocol;
    }
    setSecure(secure) {
        this.isSecureField = secure;
    }
    setParams(paramsString) {
        this.paramsString = paramsString;
    }
    build() {
        this.fillUrl(this.urlString);
        this.fillParams(this.paramsString);
        return this;
    }
    fillUrl(urlString) {
        let index, len, secure;
        index = stdlib.indexOf(urlString, ":", false);
        if (index > 0) {
            len = stdlib.len(urlString);
            this.terminalProtocol = stdlib.substring(urlString, 0, index);
            this.url = stdlib.substring(urlString, index + 1, len - index - 1);
            if (this.isSecure()) {
                secure = "s";
            }
            else {
                secure = "";
            }
            index = stdlib.indexOf(this.url, "://", false);
            if (index > 0) {
                len = stdlib.len(this.url);
                this.url = stdlib.substring(this.url, index + 3, len - index - 3);
            }
            if (stdlib.len(this.getProtocol()) > 0) {
                this.url = this.getProtocol() + secure + "://" + this.url;
            }
        }
        else {
            this.url = urlString;
            this.terminalProtocol = "";
        }
    }
    fillParams(paramsString) {
        let parser, part, parts, index, i;
        parser = new csvParser();
        parser.valueSeparator = ";";
        parts = parser.splitLine(paramsString);
        for (i = 0; i <= parts.length - 1; i += 1) {
            part = parts[i];
            index = stdlib.indexOf(part, "=", false);
            if (index >= 0) {
                this.setParam(stdlib.substring(part, 0, index), stdlib.substring(part, index + 1, stdlib.len(part) - index - 1));
            }
        }
    }
}
module.exports = TerminalUrlBuilder
