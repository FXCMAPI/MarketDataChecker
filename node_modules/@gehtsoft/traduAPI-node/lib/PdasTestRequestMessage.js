'use strict';
let APdasRequestMessage = require('./APdasRequestMessage.js');
let PdasMessageFieldFactory = require('./PdasMessageFieldFactory.js');
let PdasMessageSerializer = require('./PdasMessageSerializer.js');
let PdasMessageType = require('./PdasMessageType.js');
let PdasMessageFieldTag = require('./PdasMessageFieldTag.js');
let PdasConstants = require('./PdasConstants.js');
let PdasTransportMessage = require('./PdasTransportMessage.js');
class PdasTestRequestMessage extends APdasRequestMessage {
    build(session, terminal, requestNumber, messageType) {
        let pdasMessageSerializer, factory, pdasMessage, requestId, terminalUrl, result, subId;
        terminalUrl = terminal.getUrls()[0];
        subId = terminal.getSubId();
        factory = new PdasMessageFieldFactory();
        pdasMessageSerializer = new PdasMessageSerializer();
        pdasMessage = factory.createMessage(PdasMessageType.TEST_REQUEST_MESSAGE);
        requestId = session.getSessionId() + "-" + (requestNumber).toString();
        pdasMessage.addChild(factory.createStringField(PdasMessageFieldTag.TEST_REQUEST_ID, requestId));
        pdasMessage.addChild(factory.createStringField(PdasMessageFieldTag.TRADING_SESSION_ID, session.getTradingTerminal().getId()));
        APdasRequestMessage.addSaltedRequestIdIfRequired(session, requestId, pdasMessage, factory);
        pdasMessage.addChild(factory.createStringField(PdasMessageFieldTag.MSG_TYPE, PdasMessageType.TEST_REQUEST_MESSAGE));
        pdasMessage.addChild(factory.createStringField(PdasMessageFieldTag.TRADING_SESSION_SUB_ID, subId));
        pdasMessage.addChild(factory.createStringField(PdasConstants.SID, session.getSessionId()));
        result = PdasTransportMessage.create(messageType, this.createRequestUrl(terminalUrl), pdasMessageSerializer.serialize(pdasMessage));
        return result;
    }
}
module.exports = PdasTestRequestMessage
