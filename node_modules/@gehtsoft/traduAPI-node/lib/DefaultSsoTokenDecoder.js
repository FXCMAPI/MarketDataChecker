'use strict';
let buffer = require('@gehtsoft/LuaxStdlib-node').buffer;
let stdlib = require('@gehtsoft/LuaxStdlib-node').stdlib;
let io = require('@gehtsoft/LuaxStdlib-node').io;
let cryptography = require('@gehtsoft/LuaxStdlib-node').cryptography;
//@@DocBrief("Default implementation for perform decrypt sso token")
class DefaultSsoTokenDecoder {
    decrypt(encryptedToken, key) {
        let keyBuffer, valueBuffer, decodedBuffer, decodedString;
        valueBuffer = buffer.fromBase64(stdlib.trim(encryptedToken));
        keyBuffer = buffer.create(buffer.getEncodedStringLength(key, io.CP_ANSI));
        keyBuffer.setEncodedString(0, key, io.CP_ANSI);
        decodedBuffer = cryptography.AES128(valueBuffer, keyBuffer, false);
        decodedString = decodedBuffer.getEncodedString(0, decodedBuffer.length(), io.CP_ANSI);
        return decodedString;
    }
}
module.exports = DefaultSsoTokenDecoder
