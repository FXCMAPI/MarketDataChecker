'use strict';
let DXFeedConnectionState = require('./DXFeedConnectionState.js');
let DXFeedConnectionStatePublisher = require('./DXFeedConnectionStatePublisher.js');
let LogManager = require('./LogManager.js');
let DXFeedConnectionError = require('./DXFeedConnectionError.js');
class DXFeedConnectionStateManager {
    statePublisher;
    state;
    logger;
    constructor() {
        this.state = new DXFeedConnectionState();
        this.statePublisher = new DXFeedConnectionStatePublisher();
        this.logger = LogManager.getLogger();
    }
    getState() {
        return this.state;
    }
    subscribe(listener) {
        this.statePublisher.subscribe(listener);
    }
    unsubscribe(listener) {
        this.statePublisher.unsubscribe(listener);
    }
    changeState(stateCode) {
        this.logger.info("DXFeedConnection state code changed to " + (stateCode).toString());
        this.state.setState(stateCode);
        this.statePublisher.notifyStateChange(this.state);
    }
    changeStateWithError(stateCode, error) {
        this.logger.error("DXFeedConnection state code changed to " + (stateCode).toString() + " with error " + error);
        this.state.setStateWithError(stateCode, DXFeedConnectionError.create(error));
        this.statePublisher.notifyStateChange(this.state);
    }
}
module.exports = DXFeedConnectionStateManager
