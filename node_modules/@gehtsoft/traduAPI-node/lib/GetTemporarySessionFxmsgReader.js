'use strict';
let AAuthFxmsgReader = require('./AAuthFxmsgReader.js');
let GetTemporarySessionMessageBuilder = require('./GetTemporarySessionMessageBuilder.js');
let csvParser = require('@gehtsoft/LuaxStdlib-node').csvParser;
let stdlib = require('@gehtsoft/LuaxStdlib-node').stdlib;
let LogManager = require('./LogManager.js');
class GetTemporarySessionFxmsgReader extends AAuthFxmsgReader {
    processStatus(status, statusText, requestId) {
        let statusTextSplit, data, dataSplit, csvParserInstance, responseMessage;
        responseMessage = null;
        if ("2" == status) {
            responseMessage = new GetTemporarySessionMessageBuilder();
            responseMessage.setError(statusText);
        } else if (statusText != null && stdlib.len(statusText) > 0) {
            csvParserInstance = new csvParser();
            csvParserInstance.valueSeparator = "\n";
            statusTextSplit = csvParserInstance.splitLine(statusText);
            if (statusTextSplit.length > 1) {
                data = statusTextSplit[1];
                csvParserInstance.valueSeparator = ";";
                dataSplit = csvParserInstance.splitLine(data);
                if (dataSplit.length > 0) {
                    responseMessage = new GetTemporarySessionMessageBuilder();
                    responseMessage.setTemporarySession(stdlib.trim(dataSplit[0]));
                }
            }
        }
        if (responseMessage != null) {
            return responseMessage.build();
        }
        LogManager.getLogger().error("GetTemporarySessionFxmsgReader. Status text has incorrect format: " + statusText);
        return null;
    }
}
module.exports = GetTemporarySessionFxmsgReader
