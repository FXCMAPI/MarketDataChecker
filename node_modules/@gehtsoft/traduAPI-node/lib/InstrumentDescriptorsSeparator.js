'use strict';
let PriceTerminalTypes = require('./PriceTerminalTypes.js');
let list = require('@gehtsoft/LuaxStdlib-node').list;
class InstrumentDescriptorsSeparator {
    sessionStorage;
    constructor() {
        this.sessionStorage = null;
    }
    static create(sessionStorage) {
        let instance;
        instance = new InstrumentDescriptorsSeparator();
        instance.sessionStorage = sessionStorage;
        return instance;
    }
    getPdasDescriptors(instrumentDescriptors) {
        return this.getDescriptors(instrumentDescriptors, PriceTerminalTypes.PDAS);
    }
    getDxfeedDescriptors(instrumentDescriptors) {
        return this.getDescriptors(instrumentDescriptors, PriceTerminalTypes.DXFEED);
    }
    getDescriptors(instrumentDescriptors, terminalType) {
        let i, descriptorList, result, initializer, descriptor;
        if (this.sessionStorage == null) {
            return instrumentDescriptors;
        }
        descriptorList = new list();
        for (i = 0; i <= instrumentDescriptors.length - 1; i += 1) {
            descriptor = instrumentDescriptors[i];
            initializer = this.sessionStorage.getPriceTerminalInitializerByPriceStreamId(descriptor.getPriceStreamId());
            if (initializer != null) {
                if (initializer.getPriceTerminalType() == terminalType) {
                    descriptorList.add(descriptor);
                }
            }
        }
        result = new Array(descriptorList.length());
        for (i = 0; i <= descriptorList.length() - 1; i += 1) {
            result[i] = descriptorList.get(i);
        }
        return result;
    }
}
module.exports = InstrumentDescriptorsSeparator
