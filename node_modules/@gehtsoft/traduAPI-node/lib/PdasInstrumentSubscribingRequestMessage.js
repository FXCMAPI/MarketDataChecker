'use strict';
let APdasRequestMessage = require('./APdasRequestMessage.js');
let PdasMessageFieldFactory = require('./PdasMessageFieldFactory.js');
let PdasMessageSerializer = require('./PdasMessageSerializer.js');
let PdasMessageFieldTag = require('./PdasMessageFieldTag.js');
let PdasMessageValue = require('./PdasMessageValue.js');
let PdasRequestCommand = require('./PdasRequestCommand.js');
let PdasConstants = require('./PdasConstants.js');
let PdasTransportMessage = require('./PdasTransportMessage.js');
let TransportMessageType = require('./TransportMessageType.js');
class PdasInstrumentSubscribingRequestMessage extends APdasRequestMessage {
    build(tradingSession, offerIds, toSubscribe, requestNumber, transactTime) {
        let pdasMessageSerializer, factory, pdasMessage, requestId, pdasMessageList, group, status, subscrList, i, result, terminalUrl;
        status = "D";
        if (toSubscribe) {
            status = "T";
        }
        factory = new PdasMessageFieldFactory();
        pdasMessageSerializer = new PdasMessageSerializer();
        terminalUrl = tradingSession.getTradingTerminal().getUrls()[0];
        requestId = tradingSession.getSessionId() + "-" + (requestNumber).toString();
        pdasMessage = APdasRequestMessage.createMessage(factory, tradingSession, transactTime, requestId);
        pdasMessageList = factory.createList(PdasMessageFieldTag.FXCM_NO_PARAM);
        subscrList = "";
        for (i = 0; i <= offerIds.length - 1; i += 1) {
            subscrList = subscrList + offerIds[i];
            subscrList = subscrList + ",";
            subscrList = subscrList + status;
            subscrList = subscrList + ";";
        }
        group = factory.createGroup();
        group.addChild(factory.createStringField(PdasMessageFieldTag.FXCM_PARAM_NAME, PdasMessageValue.CLIENT_SUBSCR_LST));
        group.addChild(factory.createStringField(PdasMessageFieldTag.FXCM_PARAM_VALUE, subscrList));
        pdasMessageList.addChild(group);
        group = factory.createGroup();
        group.addChild(factory.createStringField(PdasMessageFieldTag.FXCM_PARAM_NAME, PdasMessageValue.CLIENT_QID));
        group.addChild(factory.createStringField(PdasMessageFieldTag.FXCM_PARAM_VALUE, requestId));
        pdasMessageList.addChild(group);
        pdasMessage.addChild(pdasMessageList);
        pdasMessage.addChild(factory.createStringField(PdasMessageFieldTag.FXCM_COMMAND_ID, PdasRequestCommand.INSTRUMENT_SUBSCRIBING));
        pdasMessage.addChild(factory.createStringField(PdasConstants.SID, tradingSession.getSessionId()));
        result = PdasTransportMessage.create(TransportMessageType.InstrumentSubscribing, this.createRequestUrl(terminalUrl), pdasMessageSerializer.serialize(pdasMessage));
        return result;
    }
}
module.exports = PdasInstrumentSubscribingRequestMessage
