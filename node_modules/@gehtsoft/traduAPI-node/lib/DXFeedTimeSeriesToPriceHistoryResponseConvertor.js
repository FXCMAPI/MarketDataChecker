'use strict';
let PriceHistoryResponseBuilder = require('./PriceHistoryResponseBuilder.js');
let PriceHistoryItemBuilder = require('./PriceHistoryItemBuilder.js');
class DXFeedTimeSeriesToPriceHistoryResponseConvertor {
    convert(series, bidAdjustment, askAdjustment) {
        let index, itemsCount, priceHistoryResponseBuilder, dXFeedTimeSeries, historyItemBuilder, lastBarDateTime;
        priceHistoryResponseBuilder = new PriceHistoryResponseBuilder();
        itemsCount = 0;
        for (index = series.length - 1; index >= 0; index += -1) {
            dXFeedTimeSeries = series[index];
            historyItemBuilder = new PriceHistoryItemBuilder();
            historyItemBuilder.setDate(dXFeedTimeSeries.getTime());
            historyItemBuilder.setBidOpen(dXFeedTimeSeries.getOpen() + bidAdjustment);
            historyItemBuilder.setBidClose(dXFeedTimeSeries.getClose() + bidAdjustment);
            historyItemBuilder.setBidHigh(dXFeedTimeSeries.getHigh() + bidAdjustment);
            historyItemBuilder.setBidLow(dXFeedTimeSeries.getLow() + bidAdjustment);
            historyItemBuilder.setAskOpen(0);
            historyItemBuilder.setAskClose(0);
            historyItemBuilder.setAskHigh(0);
            historyItemBuilder.setAskLow(0);
            historyItemBuilder.setVolume(Math.trunc(dXFeedTimeSeries.getVolume()));
            priceHistoryResponseBuilder.addPriceHistory(historyItemBuilder.build());
            itemsCount = itemsCount + 1;
            lastBarDateTime = dXFeedTimeSeries.getTime();
        }
        priceHistoryResponseBuilder.setLastBarTime(lastBarDateTime);
        priceHistoryResponseBuilder.setCount(itemsCount);
        return priceHistoryResponseBuilder;
    }
}
module.exports = DXFeedTimeSeriesToPriceHistoryResponseConvertor
