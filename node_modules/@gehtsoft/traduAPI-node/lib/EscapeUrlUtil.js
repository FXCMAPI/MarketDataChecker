'use strict';
let stdlib = require('@gehtsoft/LuaxStdlib-node').stdlib;
//@@DocBrief("Escapes URL special characters")
class EscapeUrlUtil {
    static escape(source) {
        let i, escapedString, unicode;
        if (source == "") {
            return "";
        }
        escapedString = "";
        for (i = 0; i <= stdlib.len(source) - 1; i += 1) {
            unicode = stdlib.unicode(source, i);
            if (EscapeUrlUtil.needEscape(unicode)) {
                escapedString = escapedString + "%" + stdlib.upper(EscapeUrlUtil.decimalToHex(unicode));
            }
            else {
                escapedString = escapedString + stdlib.char(unicode);
            }
        }
        return escapedString;
    }
    static needEscape(unicode) {
        let charV;
        if (unicode <= 31 || unicode >= 127) {
            return true;
        }
        else {
            charV = stdlib.char(unicode);
            if (charV == "#" || charV == "<" || charV == ">" || charV == "]" || charV == "\\" || charV == "[" || charV == "^" || charV == "`" || charV == "{" || charV == "|" || charV == "}" || charV == "'" || charV == "@" || charV == "%" || charV == "&" || charV == "+") {
                return true;
            }
        }
        return false;
    }
    static decimalToHex(number) {
        let hexStr, result, num, n;
        if (number == 0) {
            return "0";
        }
        hexStr = "0123456789ABCDEF";
        result = "";
        num = number;
        while(num > 0) {
            n = num % 16;
            result = stdlib.substring(hexStr, n, 1) + result;
            num = Math.trunc(stdlib.floor((num / 16)));
        }
        return result;
    }
}
module.exports = EscapeUrlUtil
