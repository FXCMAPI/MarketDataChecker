'use strict';
let ErrorEvent = require('./ErrorEvent.js');
let stdlib = require('@gehtsoft/LuaxStdlib-node').stdlib;
class LoggerWrapper {
    logger;
    eventLogger;
    constructor() {
        this.logger = null;
    }
    setLogger(logger) {
        this.logger = logger;
    }
    setEventLogger(eventLogger) {
        this.eventLogger = eventLogger;
    }
    debug(message) {
        if (this.logger != null) {
            this.logger.debug(message);
        }
    }
    info(message) {
        if (this.logger != null) {
            this.logger.info(message);
        }
    }
    warning(message) {
        if (this.logger != null) {
            this.logger.warning(message);
        }
    }
    error(message) {
        let errorEvent;
        if (this.logger != null) {
            this.logger.error(message);
        }
        if (this.eventLogger != null) {
            errorEvent = ErrorEvent.create("Error", stdlib.nowlocal(), message);
            this.eventLogger.error(errorEvent);
        }
    }
    fatal(message) {
        let errorEvent;
        if (this.logger != null) {
            this.logger.fatal(message);
        }
        if (this.eventLogger != null) {
            errorEvent = ErrorEvent.create("Error", stdlib.nowlocal(), message);
            this.eventLogger.error(errorEvent);
        }
    }
}
module.exports = LoggerWrapper
