'use strict';
class OffersRefreshController {
    offersSubscribed;
    refreshed;
    error;
    callback;
    constructor() {
        this.callback = null;
        this.reset();
    }
    setOffersSubscribed() {
        this.offersSubscribed = true;
        this.checkAndNotify();
    }
    setRefreshed() {
        this.refreshed = true;
        this.checkAndNotify();
    }
    setError(error) {
        this.refreshed = true;
        this.notifyError(error);
    }
    isSuccess() {
        return this.offersSubscribed && this.refreshed && this.error == "";
    }
    reset() {
        this.offersSubscribed = false;
        this.refreshed = false;
        this.error = "";
    }
    checkAndNotify() {
        if (this.isSuccess()) {
            this.notifySuccess();
        }
    }
    notifySuccess() {
        this.callback.onSuccess();
    }
    notifyError(error) {
        this.callback.onError(error);
    }
    static create(callback) {
        let result;
        result = new OffersRefreshController();
        result.callback = callback;
        return result;
    }
}
module.exports = OffersRefreshController
