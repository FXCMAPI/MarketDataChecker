'use strict';
let ConnectionStatus = require('./ConnectionStatus.js');
class GetInitializedPriceTerminalCallback {
    callback;
    mdtConnectionStatusManager;
    onError(error) {
        if (!this.mdtConnectionStatusManager.getConnectionStatus().isReconnecting()) {
            this.mdtConnectionStatusManager.changeConnectionStatusWithError(ConnectionStatus.DISCONNECTED, error);
        }
        if (this.callback != null) {
            this.callback.onError(error);
        }
    }
    onSuccess(result) {
        this.mdtConnectionStatusManager.changeConnectionStatus(ConnectionStatus.CONNECTED);
        if (this.callback != null) {
            this.callback.onSuccess(result);
        }
    }
    static create(mdtConnectionStatusManager, callback) {
        let instance;
        instance = new GetInitializedPriceTerminalCallback();
        instance.mdtConnectionStatusManager = mdtConnectionStatusManager;
        instance.callback = callback;
        return instance;
    }
}
module.exports = GetInitializedPriceTerminalCallback
