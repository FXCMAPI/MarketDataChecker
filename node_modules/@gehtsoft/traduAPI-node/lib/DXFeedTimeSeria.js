'use strict';
let stdlib = require('@gehtsoft/LuaxStdlib-node').stdlib;
class DXFeedTimeSeria {
    symbol;
    eventTime;
    eventFlags;
    index;
    time;
    sequence;
    count;
    open;
    high;
    low;
    close;
    volume;
    vwap;
    bidVolume;
    askVolume;
    impVolatility;
    openInterest;
    constructor() {
        this.symbol = "";
        this.eventTime = stdlib.mkdatetime(1900, 1, 1, 0, 0, 0, 0);
        this.eventFlags = 0;
        this.index = "";
        this.time = stdlib.mkdatetime(1900, 1, 1, 0, 0, 0, 0);
        this.sequence = 0;
        this.count = 0;
        this.open = 0.0;
        this.high = 0.0;
        this.low = 0.0;
        this.close = 0.0;
        this.volume = 0.0;
        this.vwap = 0.0;
        this.bidVolume = 0.0;
        this.askVolume = 0.0;
        this.impVolatility = 0.0;
        this.openInterest = 0.0;
    }
    getSymbol() {
        return this.symbol;
    }
    getEventTime() {
        return this.eventTime;
    }
    getEventFlags() {
        return this.eventFlags;
    }
    getIndex() {
        return this.index;
    }
    getTime() {
        return this.time;
    }
    getSequence() {
        return this.sequence;
    }
    getCount() {
        return this.count;
    }
    getOpen() {
        return this.open;
    }
    getHigh() {
        return this.high;
    }
    getLow() {
        return this.low;
    }
    getClose() {
        return this.close;
    }
    getVolume() {
        return this.volume;
    }
    getVwap() {
        return this.vwap;
    }
    getBidVolume() {
        return this.bidVolume;
    }
    getAskVolume() {
        return this.askVolume;
    }
    getImpVolatility() {
        return this.impVolatility;
    }
    getOpenInterest() {
        return this.openInterest;
    }
}
module.exports = DXFeedTimeSeria
