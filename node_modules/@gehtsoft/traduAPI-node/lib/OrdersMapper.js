'use strict';
let OrderBuilder = require('./OrderBuilder.js');
class OrdersMapper {
    static mergeCalculatedFields(result, calculatedFields) {
        let orderTrailingStopData;
        result.setStop(calculatedFields.getStop());
        result.setLimit(calculatedFields.getLimit());
        result.setStopOrderId(calculatedFields.getStopOrderId());
        result.setLimitOrderId(calculatedFields.getLimitOrderId());
        result.setTypeStop(calculatedFields.getTypeStop());
        result.setTypeLimit(calculatedFields.getTypeLimit());
        result.setStopTrailStep(calculatedFields.getStopTrailStep());
        result.setStopTrailRate(calculatedFields.getStopTrailRate());
        orderTrailingStopData = calculatedFields.getOrderTrailingStopData();
        if (orderTrailingStopData != null) {
            if (result.getRateMin() != 0.0 && result.getRateMax() != 0.0) {
                result.setRateMin(orderTrailingStopData.getRate());
                result.setRateMax(orderTrailingStopData.getRateRange());
            }
            else {
                result.setRate(orderTrailingStopData.getRate());
            }
            result.setTrailRate(orderTrailingStopData.getTrailRate());
            result.setStopMove(orderTrailingStopData.getStopMove());
        }
    }
    static mapInternalToPublic(order) {
        let result;
        if (order == null) {
            return null;
        }
        result = new OrderBuilder();
        result.setOrderId(order.getOrderId());
        result.setRequestId(order.getRequestId());
        result.setRate(order.getRate());
        result.setExecutionRate(order.getExecutionRate());
        result.setRateMin(order.getRateMin());
        result.setRateMax(order.getRateMax());
        result.setTradeId(order.getTradeId());
        result.setAccountId(order.getAccountId());
        result.setAccountName(order.getAccountName());
        result.setOfferId(order.getOfferId());
        result.setNetQuantity(order.getNetQuantity());
        result.setBuySell(order.getBuySell());
        result.setStage(order.getStage());
        result.setType(order.getType());
        result.setStatus(order.getStatus());
        result.setStatusTime(order.getStatusTime());
        result.setAmount(order.getAmount());
        result.setLifetime(order.getLifetime());
        result.setAtMarket(order.getAtMarket());
        result.setTrailStep(order.getTrailStep());
        result.setTrailRate(order.getTrailRate());
        result.setTimeInForce(order.getTimeInForce());
        result.setAccountKind(order.getAccountKind());
        result.setRequestTxt(order.getRequestTxt());
        result.setContingentOrderID(order.getContingentOrderID());
        result.setContingencyType(order.getContingencyType());
        result.setPrimaryId(order.getPrimaryId());
        result.setOriginAmount(order.getOriginAmount());
        result.setFilledAmount(order.getFilledAmount());
        result.setWorkingIndicator(order.getWorkingIndicator());
        result.setPegType(order.getPegType());
        result.setPegOffset(order.getPegOffset());
        result.setPegOffsetMin(order.getPegOffsetMin());
        result.setPegOffsetMax(order.getPegOffsetMax());
        result.setExpireDate(order.getExpireDate());
        result.setValueDate(order.getValueDate());
        result.setParties(order.getParties());
        result.setSide(order.getSide());
        return result;
    }
}
module.exports = OrdersMapper
