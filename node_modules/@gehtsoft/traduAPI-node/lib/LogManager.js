'use strict';
let exception = require('@gehtsoft/LuaxStdlib-node').exception;
let FXConnectLiteErrorCodes = require('./FXConnectLiteErrorCodes.js');
let LoggerWrapper = require('./LoggerWrapper.js');
class LogManager {
    static instance = null;
    static getLogger() {
        LogManager.checkInstance();
        return LogManager.instance;
    }
    static setLogger(logger) {
        if (logger == null) {
            LogManager.getLogger().error("LogManager.setLogger(): logger is not set");
            throw exception.create(FXConnectLiteErrorCodes.CODE_REQUIRED_PARAMETER_NOT_SET, "logger is not set");
        }
        LogManager.checkInstance();
        LogManager.instance.setLogger(logger);
    }
    static setEventLogger(eventLogger) {
        if (eventLogger == null) {
            LogManager.getLogger().error("LogManager.setLogger(): eventLogger is not set");
            throw exception.create(FXConnectLiteErrorCodes.CODE_REQUIRED_PARAMETER_NOT_SET, "eventLogger is not set");
        }
        LogManager.checkInstance();
        LogManager.instance.setEventLogger(eventLogger);
    }
    static checkInstance() {
        if (LogManager.instance == null) {
            LogManager.instance = new LoggerWrapper();
        }
    }
}
module.exports = LogManager
