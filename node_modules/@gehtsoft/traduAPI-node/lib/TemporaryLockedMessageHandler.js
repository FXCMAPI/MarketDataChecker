'use strict';
let MessageType = require('./MessageType.js');
class TemporaryLockedMessageHandler {
    messageRouter;
    static create(messageRouter) {
        let handler;
        handler = new TemporaryLockedMessageHandler();
        handler.messageRouter = messageRouter;
        handler.setMessageReceiver();
    }
    setMessageReceiver() {
        this.messageRouter.subscribeNewMessageReceive(MessageType.LockedMessage, new TemporaryLockedMessageHandler.ReceiveNewMessageListener(this));
    }
}
module.exports = TemporaryLockedMessageHandler
TemporaryLockedMessageHandler.ReceiveNewMessageListener = class {
    _owner_;
    constructor(_owner_) {
        this._owner_ = _owner_;
    }
    onNewMessageReceive(message) {
        let lockedMessage, messages;
        if (message.getType() == MessageType.LockedMessage) {
            lockedMessage = message;
            messages = new Array(1);
            messages[0] = lockedMessage.getMessage();
            this._owner_.messageRouter.publishNewMessage(messages);
        }
    }
}
