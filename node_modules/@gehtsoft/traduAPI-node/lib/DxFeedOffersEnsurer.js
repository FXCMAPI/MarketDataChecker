'use strict';
let list = require('@gehtsoft/LuaxStdlib-node').list;
let CollectionUtils = require('./CollectionUtils.js');
class DxFeedOffersEnsurer {
    instrumentsProvider;
    instrumentDescriptorsSeparator;
    internalOffersLoader;
    static create(instrumentsProvider, instrumentDescriptorsSeparator, internalOffersLoader) {
        let instance;
        instance = new DxFeedOffersEnsurer();
        instance.instrumentsProvider = instrumentsProvider;
        instance.instrumentDescriptorsSeparator = instrumentDescriptorsSeparator;
        instance.internalOffersLoader = internalOffersLoader;
        return instance;
    }
    check(offerIds, completeAction) {
        let descriptor, descriptors, i, offerIdsList, descriptorList;
        descriptorList = new list();
        for (i = 0; i <= offerIds.length - 1; i += 1) {
            descriptor = this.instrumentsProvider.getInstrumentDescriptorByOfferId(offerIds[i]);
            if (descriptor != null) {
                descriptorList.add(descriptor);
            }
        }
        descriptors = new Array(descriptorList.length());
        for (i = 0; i <= descriptorList.length() - 1; i += 1) {
            descriptors[i] = descriptorList.get(i);
        }
        descriptors = this.instrumentDescriptorsSeparator.getDxfeedDescriptors(descriptors);
        if (descriptors.length > 0) {
            offerIdsList = new list();
            for (i = 0; i <= descriptors.length - 1; i += 1) {
                CollectionUtils.addStringToList(offerIdsList, descriptors[i].getOfferId());
            }
            this.internalOffersLoader.ensureOffersLoaded(CollectionUtils.stringListToArray(offerIdsList), completeAction);
        }
        else {
            completeAction.invoke();
        }
    }
}
module.exports = DxFeedOffersEnsurer
