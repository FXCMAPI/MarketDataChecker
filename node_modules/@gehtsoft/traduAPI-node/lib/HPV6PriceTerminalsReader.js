'use strict';
let HPV6TerminalsReader = require('./HPV6TerminalsReader.js');
let HostsParserXmlUtils = require('./HostsParserXmlUtils.js');
let list = require('@gehtsoft/LuaxStdlib-node').list;
let xmlNode = require('@gehtsoft/LuaxStdlib-node').xmlNode;
class HPV6PriceTerminalsReader {
    terminalsReader;
    constructor() {
        this.terminalsReader = new HPV6TerminalsReader();
    }
    buildPriceTerminals(node, root, terminalFactory, terminalUrlFactory) {
        let priceTerminalsGroup, priceTerminalsGroupName, result;
        result = null;
        priceTerminalsGroupName = node.getAttributeByName("price_terminal");
        if (priceTerminalsGroupName != null) {
            priceTerminalsGroup = HostsParserXmlUtils.findNodeByName(priceTerminalsGroupName.getValue(), root);
            if (priceTerminalsGroup != null) {
                result = new list();
                this.readGroup(priceTerminalsGroup, result, terminalFactory, terminalUrlFactory);
            }
        }
        return result;
    }
    readGroup(group, result, terminalFactory, terminalUrlFactory) {
        let child, i;
        for (i = 0; i <= group.getChildrenCount() - 1; i += 1) {
            child = group.getChild(i);
            if (child.getType() == xmlNode.ELEMENT) {
                result.add(this.terminalsReader.createTerminal(child, terminalFactory, terminalUrlFactory));
            }
        }
    }
}
module.exports = HPV6PriceTerminalsReader
