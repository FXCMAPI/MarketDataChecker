'use strict';
let DxFeedOffersEnsurer = require('./DxFeedOffersEnsurer.js');
class GetInstrumentsCallbackWithOffersLoading {
    managerName;
    offerIds;
    logger;
    completeRefreshAction;
    dxFeedOffersEnsurer;
    static create(managerName, offerIds, instrumentsProvider, instrumentDescriptorsSeparator, internalOffersLoader, logger, completeRefreshAction) {
        let instance;
        instance = new GetInstrumentsCallbackWithOffersLoading();
        instance.managerName = managerName;
        instance.offerIds = offerIds;
        instance.logger = logger;
        instance.completeRefreshAction = completeRefreshAction;
        instance.dxFeedOffersEnsurer = DxFeedOffersEnsurer.create(instrumentsProvider, instrumentDescriptorsSeparator, internalOffersLoader);
        return instance;
    }
    onSuccess(instruments) {
        this.dxFeedOffersEnsurer.check(this.offerIds, this.completeRefreshAction);
    }
    onError(error) {
        this.logger.error(this.managerName + ". Can't load required instruments: " + error);
        this.completeRefreshAction.invoke();
    }
}
module.exports = GetInstrumentsCallbackWithOffersLoading
