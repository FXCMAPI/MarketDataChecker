'use strict';
let list = require('@gehtsoft/LuaxStdlib-node').list;
let jsonParser = require('@gehtsoft/LuaxStdlib-node').jsonParser;
let jsonNode = require('@gehtsoft/LuaxStdlib-node').jsonNode;
let stdlib = require('@gehtsoft/LuaxStdlib-node').stdlib;
class ADXFeedReader {
    getCollection(jsonString) {
        let result, resultList, i, parser, root, message;
        resultList = new list();
        if (jsonString != null && stdlib.len(jsonString) > 0) {
            parser = new jsonParser();
            root = parser.parse(jsonString);
            if (root.getType() == jsonNode.OBJECT) {
                message = this.parse(root);
                if (message != null) {
                    resultList.add(message);
                }
            } else if (root.getType() == jsonNode.ARRAY) {
                this.parseArray(root, resultList);
            }
        }
        result = new Array(resultList.length());
        for (i = 0; i <= resultList.length() - 1; i += 1) {
            result[i] = resultList.get(i);
        }
        return result;
    }
    parseArray(root, resultList) {
        let message, n, i;
        n = root.getChildrenCount();
        for (i = 0; i <= n - 1; i += 1) {
            message = this.parse(root.getChildByIndex(i));
            if (message != null) {
                resultList.add(message);
            }
        }
    }
    parse(message) {
        return null;
    }
}
module.exports = ADXFeedReader
